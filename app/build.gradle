plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id "io.gitlab.arturbosch.detekt" version "$detektVersion"
    id "org.sonarqube" version "$sonarqubeVersion"
}

def keystoreProperties = new Properties()
keystoreProperties['storeFile'] = "keystore.jks"
def keystorePropertiesFile = rootProject.file("keystore.properties");
if (keystorePropertiesFile.exists())
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {

        applicationId "de.stefan_oltmann.smarthome.app"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion composeVersion
    }
}

detekt {
    allRules = true
    config = files("$projectDir/../detekt.yml")

    // Don't break the build. Just report.
    ignoreFailures = true
}

sonarqube {
    properties {
        property "sonar.projectKey", "StefanOltmann_smart-home-android"
        property "sonar.organization", "stefanoltmann"
        property "sonar.host.url", "https://sonarcloud.io"
        // Include Detekt issues
        property "sonar.kotlin.detekt.reportPaths", "build/reports/detekt/detekt.xml"
    }
}

// SonarQube should always contain Detekt issues
tasks.findByPath(':app:sonarqube').dependsOn('detekt')

dependencies {

    // Basics
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'

    // Coroutines (for getting off the UI thread)
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // Jetpack Compose
    implementation "androidx.compose.ui:ui:$composeVersion"
    implementation "androidx.compose.ui:ui-tooling:$composeVersion"
    implementation "androidx.compose.material:material:$composeVersion"
    implementation "androidx.compose.runtime:runtime-livedata:$composeVersion"
    implementation "androidx.navigation:navigation-compose:$composeNavigationVersion"

    // Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0-beta01"

    // Lifecycle
    def lifecycleVersion = "2.3.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    // REST API
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Room Database
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    // Unit Tests
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
}
